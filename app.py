from flask import Flask,request, redirect,jsonify
from inference import get_prediction
from werkzeug.utils import secure_filename
import json
import base64


app = Flask(__name__)
app.config['MAX_CONTENT_LENGTH'] = 1024 * 1024
app.config['UPLOAD_EXTENSIONS'] = ['.jpg', '.png', '.gif']
app.config['UPLOAD_PATH'] = 'uploads'

@app.route('/', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        #if 'file' not in request.files:
            #return redirect(request.url)
            #return jsonify(result='1',message='file not in request',)
        # template
        #file = request.files['file']
        json_data = request.get_json() #Get the POSTed json
        dict_data = json.loads(json_data) #Convert json to dictionary
        #file = flask.request.files.get('file', '')
        file = dict_data['file']
        image_bytes = base64.b64decode(file)
        #file = request.files.get('file')
        #if not file:
            #return jsonify(result='1',message='Not a file',)
        #image_bytes = file.read()
        class_id, class_name = get_prediction(image_bytes)
        #class_name = format_class_name(class_name)
        return jsonify(result='1',message=class_name,)

    return jsonify(result='0',message='Invalid data',)

@app.route('/predict', methods = ['GET', 'POST'])
def predict():
   if request.method == 'POST':
        if 'file' not in request.files:
            #return redirect(request.url)
            return jsonify(result='0',message='file not in request',)
        # template
        file = request.files.get('file')
        if not file:
            return jsonify(result='0',message='Not a file',)
        
        image_bytes = file.read()
        class_id, class_name = get_prediction(image_bytes)
        #class_name = format_class_name(class_name)
        return jsonify(result='1',message=class_name,)

    return jsonify(result='0',message='Invalid data',)

@app.route('/getName', methods = ['GET', 'POST'])
def getName():
    #data = request.data
    #json_data = request.get_json() #Get the POSTed json
    #dict_data = json.loads(json_data) #Convert json to dictionary
    json = request.get_json()
    #print(json)
    if len(json['appname']) == 0:
        return jsonify(result='1',message='invalid input',)

    return jsonify(result='1',message=json['appname'],)


if __name__ == "__main__":
    app.run(debug=True, port=5000)

